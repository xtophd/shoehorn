##
## MACHINE PROFILES
##



##
## LIBVIRT/KVM ENTRIES
##



kvm_default:
      description: "KVM vm using defaults"
      platform: "libvirt"
      kickstart:
      storage:
        default:
      network:
        default:
          ip:  "{{ h_pubIP | default('') }}"
          mac: "{{ h_pubMAC| default('') }}"
    
kvm_vda:
      description: "KVM vm using sparse virtio storage"
      platform: "libvirt"
      kickstart:
        blkdev: "{{ h_blkDEV | default('vda') }}"
        netdev: "{{ h_netDEV | default('enp1s0') }}"
      storage:
        default:
          bus: "virtio"
          sparse: "true"
      network:
        default:
          ip: "{{ h_pubIP | default('') }}"
          mac: "{{ h_pubMAC| default('') }}"
    
kvm_nest_vda:
      description: "KVM vm with nested-virt and virtio disks"
      platform: "libvirt"
      kickstart:
        blkdev: "{{ h_blkDEV | default('vda') }}"
        netdev: "{{ h_netDEV | default('enp1s0') }}"
      cpu:
        type: "host-passthrough"
      storage:
        default:
          bus: "virtio"
      network:
        default:
          ip: "{{ h_pubIP | default('') }}"
          mac: "{{ h_pubMAC| default('') }}"
    
kvm_sda:
      description: "KVM vm with virtio-scsi disks"
      platform: "libvirt"
      kickstart:
        blkdev: "{{ h_blkDEV | default('sda') }}"
        netdev: "{{ h_netDEV | default('enp1s0') }}"
      storage:
        default:
          bus: "virtio-scsi"
      network:
        default:
          ip: "{{ h_pubIP | default('') }}"
          mac: "{{ h_pubMAC| default('') }}"
    


##
## OVIRT ENTRIES
##


ovirt_default:
      description: "oVirt default vm"
      platform: "ovirt"
      default_os_type: "rhel_8x64"
      kickstart:
      storage:
        default:
          bus: "virtio_scsi"
      network:
        default:
          ip: "{{ h_pubIP | default('') }}"
          mac: "{{ h_pubMAC| default('') }}"
    
ovirt_sda:
      description: "oVirt vm using disk bus = virtio-scsi (sda)"
      platform: "ovirt"
      default_os_type: "rhel_8x64"
      kickstart:
        blkdev: "{{ h_blkDEV | default('sda') }}"
      storage:
        default:
          bus: "virtio_scsi"
      network:
        default:
          ip: "{{ h_pubIP | default('') }}"
    
ovirt_vda:
      description: "oVirt vm using disk bus = virtio (vda)"
      platform: "ovirt"
      default_os_type: "rhel_8x64"
      kickstart:
        blkdev: "{{ h_blkDEV | default('vda') }}"
      storage:
        default:
          bus: "virtio"
      network:
        default:
          ip: "{{ h_pubIP | default('') }}"
          mac: "{{ h_pubMAC| default('') }}"



##
## DELL ENTRIES
##


 
dell_r630:
      platform: "baremetal"
      description: "DELL r630"
      kickstart:
        blkdev: "{{ h_blkDEV | default('sda') }}"
        netdev: "{{ h_netDEV | default('eno0') }}"
      usb_storage_delay: "10"
      storage:
        default:
      network:
        default:
          ip: "{{ h_pubIP | default('') }}"
          mac: "{{ h_pubMAC| default('') }}"
      ipmi:
        fqdn:         "{{ ipmi_fqdn | default('') }}"
        get_power:    "-I lanplus chassis power status | awk '{ print $NF }'"
        power_on:     "-I lanplus chassis power on"
        power_off:    "-I lanplus chassis power off"
        config_steps:
          - "-I lanplus sel time set now"
          - "-I lanplus chassis bootdev pxe"
      bmc:
        fqdn:            "{{ bmc_fqdn | default('') }}"
        login_status:    "racadm-login-status.sh"
        power_status:    "racadm-power-status.sh"
        power_on:        "racadm-power-on.sh"
        power_off:       "racadm-power-off.sh"
        media_status:    "racadm-vmedia-status.sh"
        media_eject:     "racadm-vmedia-eject.sh"
        media_insert:    "racadm-vmedia-insert.sh"
        bootonce_media:  "racadm-bootonce-vmedia.sh"
        bootonce_pxe:    "racadm-bootonce-pxe.sh"
        bootonce_clear:  "racadm-bootonce-clear.sh"
        custom_actions:  "racadm-custom-actions.sh"


#dell_r740:
#      platform: "baremetal"
#      description: "DELL r740"
#      kickstart:
#        blkdev: "{{ h_blkDEV | default('sda') }}"
#        netdev: "{{ h_netDEV | default('eno0') }}"
#      usb_storage_delay: "10"
#      storage:
#        default:
#      network:
#        default:
#          ip: "{{ h_pubIP | default('') }}"
#          mac: "{{ h_pubMAC| default('') }}"
#      ipmi:
#        fqdn:         "{{ ipmi_fqdn | default('') }}"
#        get_power:    "-I lanplus chassis power status | awk '{ print $NF }'"
#        power_on:     "-I lanplus chassis power on"
#        power_off:    "-I lanplus chassis power off"
#        config_steps:
#          - "-I lanplus sel time set now"
#          - "-I lanplus chassis bootdev pxe"
#      bmc:
#        fqdn:            "{{ bmc_fqdn | default('') }}"
#        login_status:    "redfish-dell-login-status.py"
#        power_status:    "redfish-dell-power-status.py"
#        power_on:        "redfish-dell-power-on.py"
#        power_off:       "redfish-dell-power-off.py"
#        media_status:    "redfish-dell-vmedia-status.py"
#        media_eject:     "redfish-dell-vmedia-eject.py"
#        media_insert:    "redfish-dell-vmedia-insert.py"
#        bootonce_media:  "redfish-dell-bootonce-vmedia.py"
#        bootonce_pxe:    "redfish-dell-bootonce-pxe.py"
#        bootonce_clear:  "racadm-bootonce-clear.sh"
#        custom_actions:  "redfish-dell-custom-actions.py"


dell_r740:
      platform: "baremetal"
      description: "DELL r740 with redfish support"
      kickstart:
        blkdev: "{{ h_blkDEV | default('sda') }}"
        netdev: "{{ h_netDEV | default('eno0') }}"
      usb_storage_delay: "10"
      storage:
        default:
      network:
        default:
          ip: "{{ h_pubIP | default('') }}"
          mac: "{{ h_pubMAC| default('') }}"
      ipmi:
        fqdn:         "{{ ipmi_fqdn | default('') }}"
        get_power:    "-I lanplus chassis power status | awk '{ print $NF }'"
        power_on:     "-I lanplus chassis power on"
        power_off:    "-I lanplus chassis power off"
        config_steps:
          - "-I lanplus sel time set now"
          - "-I lanplus chassis bootdev pxe"
      bmc:
        fqdn:            "{{ redfish_fqdn | default('') }}"
        login_status:    "redfish-dell-login-status.py"
        power_status:    "redfish-dell-power-status.py"
        power_on:        "redfish-dell-power-on.py"
        power_off:       "redfish-dell-power-off.py"
        media_status:    "redfish-dell-vmedia-status.py"
        media_eject:     "redfish-dell-vmedia-eject.py"
        media_insert:    "redfish-dell-vmedia-insert.py"
        bootonce_media:  "redfish-dell-bootonce-vmedia.py"
        bootonce_pxe:    "redfish-dell-bootonce-pxe.py"
        bootonce_clear:  "redfish-dell-bootonce-clear.py"
        custom_actions:  "redfish-dell-custom-actions.py"



##
## HP ENTRIES   
##

hp_dl360_g8:
      platform: "baremetal"
      description: "HP DL360 Generation 8 (Intel E5, DDR3)"
      kickstart:
        blkdev: "{{ h_blkDEV | default('sda') }}"
        netdev: "{{ h_netDEV | default('eno1') }}"
      usb_storage_delay: "10"
      storage:
        default:
      network:
        default:
          ip: "{{ h_pubIP | default('') }}"
          mac: "{{ h_pubMAC| default('') }}"
      ipmi:
        fqdn:         "{{ ipmi_fqdn | default('') }}"
        get_power:    "-I lanplus chassis power status | awk '{ print $NF }'"
        power_on:     "-I lanplus chassis power on"
        power_off:    "-I lanplus chassis power off"
        config_steps:
          - "-I lanplus sel time set now"
          - "-I lanplus chassis bootdev pxe"
      bmc:
        fqdn:            "{{ bmc_fqdn | default('') }}"
        login_status:    "redfish-hp-login-status.py"
        power_status:    "redfish-hp-power-status.py"
        power_on:        "redfish-hp-power-on.py"
        power_off:       "redfish-hp-power-off.py"
        media_status:    "redfish-hp-vmedia-status.py"
        media_eject:     "redfish-hp-vmedia-eject.py"
        media_insert:    "redfish-hp-vmedia-insert.py"
        bootonce_media:  "redfish-hp-bootonce-vmedia.py"
        bootonce_pxe:    "redfish-hp-bootonce-pxe.py"
        bootonce_clear:  "redfish-hp-bootonce-clear.py"
        custom_actions:  "redfish-hp-custom-actions.py"





    
hp_dl380:
      platform: "baremetal"
      description: "HP DL380"
      kickstart:
        blkdev: "{{ h_blkDEV | default('sda') }}"
        netdev: "{{ h_netDEV | default('eno0') }}"
      usb_storage_delay: "10"
      storage:
        default:
      network:
        default:
          ip: "{{ h_pubIP | default('') }}"
          mac: "{{ h_pubMAC| default('') }}"



##
## SUPERMICRO ENTRIES   
##



supermicro_x9drd_if:
      platform: "baremetal"
      description: "SuperMicro X9DRD-iF"
      kickstart:
        blkdev: "{{ h_blkDEV | default('sda') }}"
        netdev: "{{ h_netDEV | default('enp5s0f0') }}"
      storage:
        default:
      network:
        default:
          ip: "{{ h_pubIP | default('') }}"
          mac: "{{ h_pubMAC| default('') }}"
      ipmi:
        fqdn:         "{{ ipmi_fqdn | default('') }}"
        get_power:    "-I lanplus chassis power status | awk '{ print $NF }'"
        power_on:     "-I lanplus chassis power on"
        power_off:    "-I lanplus chassis power off"
        config_steps:
          - "-I lanplus sel time set now"
          - "-I lanplus chassis bootdev pxe"

##
## SUSHI ENTRIES - sushi is a redfish emulator that
##                 runs on top of libvirt/kvm.  Good
##                 for testing.
##

sushi_vm:
      platform: "baremetal"
      description: "VM Controller by Sushi Redfish Emulator"
      kickstart:
        blkdev: "{{ h_blkDEV | default('sda') }}"
        netdev: "{{ h_netDEV | default('enp1s0') }}"
      storage:
        default:
      network:
        default:
          ip: "{{ h_pubIP | default('') }}"
          mac: "{{ h_pubMAC| default('') }}"
      redfish:
        fqdn:              "{{ redfish_fqdn | default('') }}"
        get_power:         "noop"
        get_media:         "-H 'Accept: application/json' -k -X GET https://$bmc/redfish/v1/Managers/Self/VirtualMedia/1 | python3 -m json.tool | egrep 'MediaStatus|Image'"
        set_power_on:      "noop"
        set_power_off:     "noop"
        set_media_insert:  "-H 'Content-Type: application/json' -H 'Accept: application/json' -d '{Image: http://10.10.3.20:8080/assets/rhcos-4.8.2-x86_64-live.x86_64.iso}'  -X POST https://$bmc/redfish/v1/Managers/Self/VirtualMedia/1/Actions/VirtualMedia.InsertMedia"
        set_media_eject:   "-H 'Content-Type: application/json' -H 'Accept: application/json' -d '{}' -X POST https://$bmc/redfish/v1/Managers/Self/VirtualMedia/1/Actions/VirtualMedia.EjectMedia"
        set_media_boot:    "-H 'Content-Type: application/json' -H 'Accept: application/json' -d '{Boot:{ BootSourceOverrideEnabled: Once, BootSourceOverrideTarget: Cd, BootSourceOverrideMode: UEFI}}' -X PATCH https://$bmc/redfish/v1/Systems/Self"

        custom_pre_tasks:
          - "noop"
          - "noop"

        custom_post_tasks:
          - "noop"
          - "noop"



##
## GENERIC PC ENTRIES
##



pc_nvme:
      platform: "baremetal"
      description: "Generic PC with nvme"
      kickstart:
        blkdev: "{{ h_blkDEV | default('nvme0n1') }}"
        netdev: "{{ h_netDEV | default('eno0') }}"
      storage:
        default:
      network:
        default:
          ip: "{{ h_pubIP | default('') }}"
          mac: "{{ h_pubMAC| default('') }}"

pc_sda:
    machine_profile:
      platform: "baremetal"
      description: "Generic PC with (sata/sas/scsi) sda"
      kickstart:
        blkdev: "{{ h_blkDEV | default('sda') }}"
        netdev: "{{ h_netDEV | default('eno0') }}"
      storage:
        default:
      network:
        default:
          ip: "{{ h_pubIP | default('') }}"
          mac: "{{ h_pubMAC| default('') }}"

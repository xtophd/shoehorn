## Authors: 
##   Christoph Doerbeck
##
## Summary:
##

- name: "ovirt-deploy : BEGIN"
  delegate_to: localhost
  throttle: 1
  block:

      ##
      ##    NOTE: All tasks here are blocked and delegated to execute
      ##          on the deployhost/localhost 
      ##

      ##
      ##    Log in to the oVIRT API service
      ##
      ##    NOTE: username and password should be in
      ##          the encrypted credentials.yml file
      ##
      ##    NOTE: to avoid concurrency problems with
      ##          hitting the api at scale, we
      ##          set 'throttle = 1'
      ##
    
      - name: "ovirt-deploy : Login to oVirt"
        run_once: true
        ovirt_auth:
          hostname: "{{ xtoph_deploy.platform_profile.api.fqdn }}"
          #ca_file:  "{{ xtoph_deploy.platform_profile.engine_cafile | default(omit) }}"
          insecure: "{{ xtoph_deploy.platform_profile.insecure |  default(true) }}"
          username: "{{ t_uid }}"
          password: "{{ t_pw  }}"
          state:    present
        vars:
          t_uid: "{{ ovirt_credentials[xtoph_deploy.selected_profile.platform]['username'] | default(ovirt_credentials['default']['username']) }}"
          t_pw:  "{{ ovirt_credentials[xtoph_deploy.selected_profile.platform]['password'] | default(ovirt_credentials['default']['password']) }}"



      ##
      ##    Transfer the ISO image to oVIRT storage domain
      ##
      ##    NOTE: to avoid concurrency problems with
      ##          disk space and i/o bandwidth, we
      ##          set 'throttle = 1'
      ##

      - block:

            - name: "ovirt-deploy : DEBUG info about image transfer"
              debug:
                msg:
                  - "## oVIRT IMAGE TRANSFER DETAILS"
                  - "hostname: {{ xtoph_deploy.platform_profile.vm.name }}"
                  - "description: {{ xtoph_deploy.platform_profile.vm.name }}.iso"
                  - "source: {{ xtoph_deploy.deployhost.tmp_dir }}/{{ xtoph_deploy.platform_profile.vm.name }}.iso"
                  - "destination: {{ xtoph_deploy.platform_profile.api.fqdn }}:{{ xtoph_deploy.machine_profile.storage.default.domain_name}}:{{ xtoph_deploy.platform_profile.vm.name }}.iso"
              when: xtoph_deploy.debug == true
      
            - name: "ovirt-deploy : upload iso image"
              #no_log: false
              ovirt_disk:
                auth: "{{ ovirt_auth }}"
                name: "{{ xtoph_deploy.platform_profile.vm.name }}.iso"
                description: "{{ xtoph_deploy.platform_profile.vm.name }}.iso"
                upload_image_path: "{{ xtoph_deploy.deployhost.tmp_dir }}/{{ xtoph_deploy.platform_profile.vm.name }}.iso"
                #bootable: yes
                #pass_discard: no
                content_type: "iso"
                format: raw
                storage_domain: "{{ xtoph_deploy.machine_profile.storage.default.domain_name }}"
      
            - name: "ovirt-deploy : clean-up temporary work-space"
              shell:
                cmd: |
                  if [[ -d "{{ xtoph_deploy.deployhost.tmp_dir }}/iso" ]] ; then
                    rm -rf "{{ xtoph_deploy.deployhost.tmp_dir }}/iso"
                  fi
      
                  if [[ -e "{{ xtoph_deploy.deployhost.tmp_dir }}/{{ xtoph_deploy.platform_profile.vm.name }}.iso" ]] ; then
                    rm -f "{{ xtoph_deploy.deployhost.tmp_dir }}/{{ xtoph_deploy.platform_profile.vm.name }}.iso"
                  fi
              when: xtoph_deploy.cleanup == true

        when: xtoph_deploy.kickstart_profile is defined and
              xtoph_deploy.kickstart_profile.method != "pxe"



      ##
      ##    Create virtual machine
      ##
      ##    ** NOTE ** 
      ##
      ##            the kickstart_profile can override the
      ##            machine_profile default os_type.  This
      ##            provides easy customization of kvm
      ##            optimizations per OS
      ##
  
      - name: "ovirt-deploy : create vm with cpu, mem and nics"
        ovirt_vm:
          auth:      "{{ ovirt_auth }}"
          name:      "{{ xtoph_deploy.platform_profile.vm.name }}"
          cluster:   "{{ xtoph_deploy.platform_profile.cluster_name }}"
          memory:    "{{ xtoph_deploy.resource_profile.memsize }} MiB"
          cpu_cores: "{{ xtoph_deploy.resource_profile.vcpus }}"
          nics:
            - name: "nic1"
              interface: "{{ xtoph_deploy.machine_profile.network.default.model }}"
              profile_name: "{{ xtoph_deploy.machine_profile.network.default.network_name }}"
              mac_address: "{{ h_pubMAC }}"
          graphical_console:
             protocol:
               - vnc
          operating_system: "{{ xtoph_deploy.kickstart_profile.kvm_os_type | default(xtoph_deploy.machine_profile.default_os_type) }}"
          high_availability: false
          type: server
          state: stopped
          wait: yes

      - name: "ovirt-deploy : modify vm with boot-disk"
        ovirt_disk:
          auth:              "{{ ovirt_auth }}"
          name:              "{{ xtoph_deploy.platform_profile.vm.name }}_root"
          vm_name:           "{{ xtoph_deploy.platform_profile.vm.name }}"
          storage_domain:    "{{ xtoph_deploy.machine_profile.storage.default.domain_name }}"
          interface:         "{{ xtoph_deploy.machine_profile.storage.default.bus }}"
          sparse:            "{{ xtoph_deploy.machine_profile.storage.default.sparse }}"
          size:              "{{ xtoph_deploy.resource_profile.storage.root.size }} GiB"
          bootable:          yes
          format:            cow
          wipe_after_delete: yes
          wait:              yes

      - name: "ovirt-deploy : modify vm with extra disks"
        vars:
          t_disk_profile: "{{ xtoph_deploy.resource_profile.storage.extra[t_diskname].hw_storage_profile }}"
        ovirt_disk:
          auth:              "{{ ovirt_auth }}"
          name:              "{{ xtoph_deploy.platform_profile.vm.name }}_{{ t_diskname }}"
          vm_name:           "{{ xtoph_deploy.platform_profile.vm.name }}"
          storage_domain:    "{{ xtoph_deploy.machine_profile.storage[t_disk_profile].domain_name }}"
          interface:         "{{ xtoph_deploy.machine_profile.storage[t_disk_profile].bus }}"
          sparse:            "{{ xtoph_deploy.machine_profile.storage[t_disk_profile].sparse }}"
          size:              "{{ xtoph_deploy['resource_profile']['storage']['extra'][t_diskname].size }} GiB"
          bootable:          no
          format:            cow
          wipe_after_delete: yes
          wait:              yes
        loop: "{{ xtoph_deploy.resource_profile.storage.extra | flatten(1) }}"
        loop_control:
          loop_var: t_diskname
        when: xtoph_deploy.resource_profile.storage.extra is defined



      ##
      ##
      ##    Configure boot device for cdrom/netinstall or pxe 
      ##    and start the Virtual Machine
      ##
      ##    ** NOTE **
      ##
      ##            Even though the deployment is NOT literally 
      ##            using cloud_init, invoking the parameter 
      ##            causes the ovirt module to launch the VM with 
      ##            a run-once flag.
      ##

      - name: "ovirt-deploy : vm attach ISO and change boot device to cdrom"
        ovirt_vm:
          auth:         "{{ ovirt_auth }}"
          name:         "{{ xtoph_deploy.platform_profile.vm.name }}"
          cluster:      "{{ xtoph_deploy.platform_profile.cluster_name }}"
          cd_iso:       "{{ xtoph_deploy.platform_profile.vm.name }}.iso"
          boot_devices:
            - hd
            - cdrom
          cloud_init:
            host_name:  "{{ xtoph_deploy.hostname }}"
          state: running
          wait: yes
        when:
          - xtoph_deploy.kickstart_profile is defined and
            xtoph_deploy.kickstart_profile.method != "pxe"

      - name: "ovirt-deploy : vm change boot device to network"
        ovirt_vm:
          auth:         "{{ ovirt_auth }}"
          name:         "{{ xtoph_deploy.platform_profile.vm.name }}"
          cluster:      "{{ xtoph_deploy.platform_profile.cluster_name }}"
          boot_devices:
            - hd
            - network
          cloud_init:
            host_name:  "{{ xtoph_deploy.hostname }}"
          state: running
          wait: yes
        when:
          - xtoph_deploy.kickstart_profile is defined and
            xtoph_deploy.kickstart_profile.method == "pxe"

      - name: "ovirt-deploy : wait for (ensure) vm state == 'up'"
        ovirt_vm_info:
          pattern: name="{{ xtoph_deploy.platform_profile.vm.name }}" cluster="{{ xtoph_deploy.platform_profile.cluster_name }}"
          auth: "{{ ovirt_auth }}"
          current_cd: true
        register: vminfo_result
        until: vminfo_result.ovirt_vms[0].status == "up"
        retries: 600
        delay: 5

      - debug:
          var: vminfo_result
        when: xtoph_deploy.debug == true

      - name: "ovirt-deploy : collect ovirt disk info"
        ovirt_disk_info:
          pattern: name={{ xtoph_deploy.platform_profile.vm.name }}*
          auth: "{{ ovirt_auth }}"
        register: diskinfo_result

      - debug:
          var: diskinfo_result.ovirt_disks
        when: xtoph_deploy.debug == true



      ##
      ##    Log out of the oVIRT API service
      ##
    
      - name: Logout from oVirt
        run_once: true
        ovirt_auth:
          state: absent
          ovirt_auth: "{{ ovirt_auth }}"



  ##
  ## End - block:
  ##

  when: deploy_node == true


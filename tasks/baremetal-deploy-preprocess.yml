## Authors: 
##   Christoph Doerbeck
##
## Summary:
##



##
##
##



- delegate_to: localhost
  block:

      ##
      ##    All tasks here are blocked and delegated
      ##    to execute on the deployhost
      ##
      ##    Execute "ipmi" calls to ready system for deployment
      ##
      ##    WHEN:
      ##      if IPMI interface is defined & method == pxe
      ##
      ##    NOTE:
      ##
      ##      xtoph_deploy only supports pxe for ipmi interfaces
      ##
      ##      As a safety measure, only enable automated deployment
      ##      of a host if (and ONLY if) power is ALREADY off
      ##

      - name: "baremetal-deploy-preprocess : (IPMI) power-status"
        shell:
          cmd: |
            ipmitool -U {{ t_user }} -P {{ t_pass }} -H {{ t_bmc }} {{ xtoph_deploy.machine_profile.ipmi.get_power }} | grep -q 'off'
        register: ipmi_result
        ignore_errors: true

      - set_fact:
          deploy_node: true
        when: ipmi_result.rc == 0

  vars:
    t_bmc:    "{{ xtoph_deploy.machine_profile.ipmi.fqdn }}"
    t_user:   "{{ ipmi_credentials[ipmi_fqdn]['username'] | default(ipmi_credentials['default']['username']) }}"
    t_pass:   "{{ ipmi_credentials[ipmi_fqdn]['password'] | default(ipmi_credentials['default']['password']) }}"
  when:
    - xtoph_deploy.machine_profile.ipmi.fqdn is defined
    - xtoph_deploy.machine_profile.ipmi.fqdn|length > 0
    - xtoph_deploy.kickstart_profile.method == "pxe"



- delegate_to: localhost
  block:

      ##
      ##    All tasks here are blocked and delegated
      ##    to execute on the deployhost
      ##
      ##    Execute "bmc" calls to ready system for deployment
      ##
      ##    WHEN:
      ##      if BMC interface (fqdn) is defined
      ##
      ##    NOTE:
      ##
      ##      As a safety measure, only enable automated deployment
      ##      of a host if (and ONLY if) power is ALREADY off
      ##

      - name: "baremetal-deploy-preprocess : (BMC) debug"
        debug:
           msg:
             - "BMC Address         : {{ t_bmc }}"
             - "BMC User ID         : {{ t_user }}"
             - "BMC Login Status    : {{ xtoph_deploy.machine_profile.bmc.login_status }}"
             - "BMC Power Status    : {{ xtoph_deploy.machine_profile.bmc.power_status }}"
             - "BMC Power On        : {{ xtoph_deploy.machine_profile.bmc.power_on }}"
             - "BMC Power Off       : {{ xtoph_deploy.machine_profile.bmc.power_off }}"
             - "BMC Media Status    : {{ xtoph_deploy.machine_profile.bmc.media_status }}"
             - "BMC Media Eject     : {{ xtoph_deploy.machine_profile.bmc.media_eject }}"
             - "BMC Media Insert    : {{ xtoph_deploy.machine_profile.bmc.media_insert }}"
        when:
          - xtoph_deploy.debug == true

      - name: "baremetal-deploy-preprocess : (BMC) login-status"
        script: >
            {{ xtoph_deploy.machine_profile.bmc.login_status }}
            -u {{ t_user }}
            -p {{ t_pass }}
            -i {{ t_bmc }}
            --chomp

      - name: "baremetal-deploy-preprocess : (BMC) power-status"
        script: >
            {{ xtoph_deploy.machine_profile.bmc.power_status }}
            -u {{ t_user }}
            -p {{ t_pass }}
            -i {{ t_bmc }}
            --chomp
        register: bmc_result

      - set_fact:
          deploy_node: true
        when: bmc_result.stdout == "off"

  vars:
    t_bmc:    "{{ xtoph_deploy.machine_profile.bmc.fqdn }}"
    t_user:   "{{ bmc_credentials[bmc_fqdn]['username'] | default(bmc_credentials['default']['username']) }}"
    t_pass:   "{{ bmc_credentials[bmc_fqdn]['password'] | default(bmc_credentials['default']['password']) }}"
  when:
    - xtoph_deploy.machine_profile.bmc.fqdn is defined
    - xtoph_deploy.machine_profile.bmc.fqdn|length > 0



- delegate_to: localhost
  block:

      ##
      ##    All tasks here are blocked and
      ##    delegated to execute on the deployhost
      ##
      ##    WHEN:
      ##      always
      ##
      ##
      ##    NOTE:
      ##
      ##      this section is blocked primarily to follow the
      ##      flow of other platforms, although here we do
      ##      NOT test for 'node_deploy'.  Some baremetal
      ##      deployments are manual and we cannot always test
      ##      the machine status with ipmi.
      ##
      ##      so we always prepare media, kickstart configs, etc...
      ##      based on the template parameters ... but rely on
      ##      the user to manually engage pxe (when ipmi is not
      ##      available)
      ##
      ##

      ##
      ##      If power state was determined above, then deploy_node
      ##      was set accordingly.  If not, set it to false.
      ##

      - set_fact:
          deploy_node: false
        when: deploy_node is undefined

      - debug: var=deploy_node
        when: xtoph_deploy.debug == true



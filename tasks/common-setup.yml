## Authors: 
##   Christoph Doerbeck
##
## Summary:
##
##



##
##    Set up ssh keys
##



- name: "common-setup : create ssh directory"
  file:
    path: /root/.ssh
    mode: "0700"
    state: directory

- name: "common-setup : test deployhost ssh key"
  stat: path="/root/.ssh/id_rsa.pub"
  register: test_ssh_key

- name: "common-setup : create deployhost ssh key"
  command: "ssh-keygen -t rsa -b 2048 -N '' -f /root/.ssh/id_rsa"
  when: test_ssh_key.stat.exists == false



##
##    Install common packages
##



- name: "common-setup : install supporting packages"
  yum: name=python-netaddr,genisoimage,xorriso,syslinux,git,tree,wget,yum-utils,net-tools,traceroute,nmap state=installed



##
##   Set up ISO directories
##



- name: "common-setup : create iso directory"
  file:
    path: "{{ xtoph_deploy.deployhost.iso.dir }}"
    mode: "0755"
    owner: "root"
    group: "root"
    state: directory



##
##   Enable system services
##



- name: "common-setup : enable system services"
  service: name="{{ item }}" state=restarted enabled=yes masked=no
  with_items:
    - "NetworkManager"


##
##   Install and enable firewalld services/ports
##



- block:

      - name: "common-setup : install firewalld packages"
        yum: name=firewalld state=installed

      - name: "common-setup : enable firewalld system service"
        service: name="firewalld" state=restarted enabled=yes masked=no

  when: xtoph_deploy.deployhost.firewalld_enable



##
##   Install and enable http services/ports
##



- block:

      - name: "common-setup : install http package"
        yum: name=httpd state=installed

      - name: "common-setup: deploy httpd configuration"
        vars:
          - p_port: "{{ xtoph_deploy.deployhost.http_port }}"
        template:
          src: "deployhost-httpd-conf.j2"
          dest: "/etc/httpd/conf/httpd.conf"
          owner: root
          group: root
          mode: 0644

      - name: "common-setup: selinux restorecon on /var/www/html"
        shell: restorecon -R /var/www/html

      - name: "common-setup : enable http system service"
        service: name="httpd" state=restarted enabled=yes masked=no

      - name: "common-setup : open common firewalld ports for http"
        firewalld:
          service: "{{ item }}"
          immediate: yes
          permanent: yes
          state: enabled
        with_items:
          - "http"
          - "https"
        when: 
          - xtoph_deploy.deployhost.firewalld_enable

      - name: "libvirt-setup : open custom firewalld ports for http"
        firewalld:
          port: "{{ item }}"
          immediate: yes
          permanent: yes
          state: enabled
        with_items:
          - "{{ xtoph_deploy.deployhost.http_port }}/tcp"
        when: 
          - xtoph_deploy.deployhost.firewalld_enable
          -  xtoph_deploy.deployhost.http_port != "80" and xtoph_deploy.deployhost.http_port != "443"

  when: xtoph_deploy.deployhost.http_enable



##
##    Install and enable dnsmasq services/ports
##



- block:

      - name: "common-setup : install dnsmasq package"
        yum: name=dnsmasq state=installed

      - name: "common-setup : adjust /etc/dnsmasq.conf with except-interface"
        lineinfile:
          dest: "/etc/dnsmasq.conf"
          insertafter: "^#except-interface=.*$"
          line: "except-interface=virbr0"
          state: present

      - name: "common-setup : adjust /etc/dnsmasq.conf with bind-interfaces"
        lineinfile:
          dest: "/etc/dnsmasq.conf"
          insertafter: "^#bind-interfaces.*$"
          line: "bind-interfaces"
          state: present

      - name: "common-setup :  enable dnsmasq system services"
        service: name="dnsmasq" state=restarted enabled=yes masked=no

      - name: "common-setup :  add dns firewalld services"
        firewalld:
          service:   "dns"
          immediate: yes
          permanent: yes
          state: enabled
        when: 
          - xtoph_deploy.deployhost.firewalld_enable

  when: xtoph_deploy.deployhost.dnsmasq_enable



##
##    Install and enable cockpit services/ports
##



- block:

      - name: "common-setup : install cockpit packages"
        yum: name=cockpit,cockpit-machines state=installed
        notify: restart_cockpit

      - name: "common-setup :  enable cockpit system services"
        service: name="{{ item }}" state=started enabled=yes masked=no
        with_items:
          - "cockpit"
          - "cockpit.socket"

      - name: "common-setup : create cockpit systemd drop-in directory"
        file:
          path: "/etc/systemd/system/cockpit.socket.d/"
          mode: "0755"
          owner: "root"
          group: "root"
          state: directory

      - name: "common-setup : deploy cockpit custom configuration"
        vars:
          - p_port: "{{ xtoph_deploy.deployhost.cockpit_port }}"
        template:
          src:  "cockpit-listen-conf.j2"
          dest: "/etc/systemd/system/cockpit.socket.d/listen.conf"
          owner: root
          group: root
          mode: 0644
        register: cockpit_result
        when: xtoph_deploy.deployhost.cockpit_port != ""
        notify: restart_cockpit

      - name: "common-setup :  add cockpit firewalld services"
        firewalld:
          service: "cockpit"
          immediate: yes
          permanent: yes
          state: enabled

      - name: "common-setup :  add cockpit custom firewalld ports"
        firewalld:
          port: "{{ kvm_cfg.cockpit_port }}/tcp"
          immediate: yes
          permanent: yes
          state: enabled
        when: xtoph_deploy.deployhost.cockpit_port != ""

  when: xtoph_deploy.deployhost.cockpit_enable



##
##    NOTE: I should probably just develop a selinux
##          test to see if port needs to be added
##
##    NOTE: If we use a port not natively included
##          by default selinux profiles, we need to add it
##
##     - name: "common-ovirt-setup:  add http port to selinux http_port_t"
##     - shell:
##         cmd: |
##           semanage port -a -t http_port_t -p tcp {{ xtoph_deploy.deployhost.http_port }}


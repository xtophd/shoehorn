---



##
##    DEBUG OUTPUT
##



- name: "main.yml : ***** BEGIN XTOPH_DEPLOY ROLE PROCESSING *****"
  debug: msg="inventory_hostname={{ inventory_hostname }} xtoph_deploy_action={{ xtoph_deploy_action }}"



##
##    Load variables
##



- name: "main.yml : loading config variables"
  include_vars:
    file: "../../../config/{{ item }}"
  loop:
    - xtoph-deploy-config.yml
    - credentials.yml

- name: "main.yml : loading xtoph_deploy/vars variables"
  include_vars:
    file: "../vars/{{ item }}"
  loop:
    - defaults.yml
    - resource_profiles.yml
    - hardware_profiles.yml
    - kickstart_profiles.yml



##
##    Combine variables under a single dictionary (xtoph_deploy)
##
##    For the various profiles, we only merge the chunk 
##    relevant to this host (inventory_hostname) which is
##    determined by  xtoph_deploy.selected_profile.XXX variable
## 



- name: "main.yml : merging xtoph_deploy_config into single dictionary called 'xtoph_deploy'"
  set_fact:
    xtoph_deploy: "{{ xtoph_deploy | combine(xtoph_deploy_config, recursive=True) }}"

- name: "main.yml : merge hardware_profile into xtoph_deploy"
  set_fact:
    xtoph_deploy: "{{ xtoph_hardware_profiles[xtoph_deploy.selected_profile.hardware] | combine(xtoph_deploy) }}"
  when: xtoph_deploy.selected_profile.hardware != ''

- name: "main.yml : merge kickstart_profile into xtoph_deploy"
  set_fact:
    xtoph_deploy: "{{ xtoph_kickstart_profiles[xtoph_deploy.selected_profile.kickstart] | combine(xtoph_deploy) }}"
  when: xtoph_deploy.selected_profile.kickstart != ''

- name: "main.yml : merge resource_profile into xtoph_deploy"
  set_fact:
    xtoph_deploy: "{{ xtoph_resource_profiles[xtoph_deploy.selected_profile.resource] | combine(xtoph_deploy) }}"
  when: xtoph_deploy.selected_profile.resource != ''



##
##    If xtoph_deploy.debug is 'true', 
##    dump the current xtoph_deploy dictionary
## 



- debug: var=xtoph_deploy
  when: xtoph_deploy.debug == true



##
##    Run platform setup for each platform defined by xtoph_deploy.deployhost.platform
##
##        NOTE: xtoph_deploy.deployhost.platform can be a single
##              item or a list.  I use a jinja built-in template
##              filter determine if a key exists is "in" the list
##
##              the platform_item declares the 'platform' and the 
##              'playbook' to include if matched
##



- name: "main.yml : setup platforms"
  include_tasks: "{{ platform_item.playbook }}"
  when: 
    - xtoph_deploy_action == "setup" 
    - platform_item.platform in xtoph_deploy.deployhost.platform
  loop_control:
    loop_var: platform_item
  with_items:
    - { platform: 'libvirt',   playbook: 'libvirt-setup.yml'   } 
    - { platform: 'ovirt',     playbook: 'ovirt-setup.yml'     } 
    - { platform: 'baremetal', playbook: 'baremetal-setup.yml' } 



##
##    BAREMETAL  undeploy/preprocess/deploy
##



- block:

    - import_tasks: baremetal-undeploy.yml
      when: xtoph_deploy_action == "undeploy"

    - import_tasks: baremetal-deploy-preprocess.yml
      when: xtoph_deploy_action == "preprocess"

    - block:
    
        - import_tasks: baremetal-deploy.yml
    
    #    - import_tasks: baremetal-deploy-monitor.yml

    #    - import_tasks: baremetal-deploy-post.yml

      when: xtoph_deploy_action == "deploy"

  when: xtoph_deploy.hardware_profile.platform == "baremetal"



##
##    OVIRT undeploy/preprocess/deploy
##



- block:

    - import_tasks: ovirt-undeploy.yml
      when: xtoph_deploy_action == "undeploy"

    - import_tasks: ovirt-deploy-preprocess.yml
      when: xtoph_deploy_action == "preprocess"

    - block:

        - import_tasks: ovirt-deploy.yml
    
        - import_tasks: ovirt-deploy-monitor.yml

        - import_tasks: ovirt-deploy-post.yml

      when: xtoph_deploy_action == "deploy" 

  when: xtoph_deploy.hardware_profile.platform == "ovirt"



##
##    LIBVIRT  undeploy/preprocess/deploy
##



- block:

    - import_tasks: libvirt-undeploy.yml
      when: xtoph_deploy_action == "undeploy"

    - import_tasks: libvirt-deploy-preprocess.yml
      when: xtoph_deploy_action == "preprocess"

    - block:
    
        - import_tasks: libvirt-deploy.yml
    
        - import_tasks: libvirt-deploy-monitor.yml

        - import_tasks: libvirt-deploy-post.yml

      when: xtoph_deploy_action == "deploy"

  when: xtoph_deploy.hardware_profile.platform == "libvirt"




##
##    DEBUG OUTPUT
##



- name: "main.yml : ***** END XTOPH_DEPLOY ROLE PROCESSING *****"
  debug: msg="inventory_hostname={{ inventory_hostname }} hardware_platform={{ xtoph_deploy.hardware_profile.platform }}  xtoph_deploy_action={{ xtoph_deploy_action }}"


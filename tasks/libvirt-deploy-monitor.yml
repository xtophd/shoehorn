## Authors: 
##   Christoph Doerbeck
##
## Summary:
##



- delegate_to: localhost
  block:



    ##
    ##    NOTE: All tasks here are delegated to excute
    ##          on the deployhost/localhost
    ##

    ##
    ##    This block groups tasks related
    ##    to finishing a kickstart (ISO) deployment
    ##

    ##
    ##    NOTE: All kickstarts are assumed to shutdown
    ##          at completion.  That's how we now it
    ##          finished.
    ##


    - name: "libvirt-deploy-monitor : wait for shutdown"
      shell:
        cmd: |
          virsh domstate "{{ xtoph_deploy.libvirt.vm.name }}" | grep -q "shut off"
      register: result
      until:  result.rc == 0
      retries: 600
      delay: 5
      when: deploy_node == true
    
    #- name: "libvirt-deploy-monitor : eject iso"
    #  ovirt_vm:
    #    auth: "{{ ovirt_auth }}"
    #    name: "{{ xtoph_deploy.ovirt.vm.name }}"
    #    cluster: "{{ xtoph_deploy.ovirt.cluster_name }}"
    #    cd_iso: ""
   

    - name: "libvirt-deploy-monitor : start node back up"
      shell:
        cmd: |
          virsh start "{{ xtoph_deploy.libvirt.vm.name }}"
      when: deploy_node == true


    #- name: "libvirt-deploy-monitor : vm change boot device to hd"
    #  ovirt_vm:
    #    auth: "{{ ovirt_auth }}"
    #    name: "{{ xtoph_deploy.ovirt.vm.name }}"
    #    cluster: "{{ xtoph_deploy.ovirt.cluster_name }}"
    #    boot_menu: "no"
    #    boot_devices:
    #      - hd
 
    #- name: "libvirt-deploy-monitor : undeploy iso"
    #  ovirt_disk:
    #    auth: '{{ ovirt_auth }}'
    #    name: '{{ xtoph_deploy.ovirt.vm.name }}.iso'
    #    storage_domain: '{{ xtoph_deploy.ovirt.storage.domain }}'
    #    state: absent
    #    wait: yes

  when: 
    - xtoph_deploy.kickstart_profile is defined




## Authors: 
##   Christoph Doerbeck
##
## Summary:
##
##


- name: "deployer-setup-dhcp : distribution and version info"
  debug: 
    msg:  "{{ ansible_distribution }}  {{ ansible_distribution_major_version }}"

- name: "deployer-setup-dhcp : package installation (RHEL7)"
  yum: name=dhcp state=installed
  when:
    - ansible_distribution == "RedHat" or ansible_distribution == "CentOS"
    - ansible_distribution_major_version == "7"

- name: "deployer-setup-dhcp : package installation (RHEL8)"
  yum: name=dhcp-server state=installed
  when:
    - ansible_distribution == "RedHat"
    - ansible_distribution_major_version == "8"

- name: "deployer-setup-dhcp : package installation (RHEL9)"
  yum: name=dhcp-server state=installed
  when:
    - ansible_distribution == "RedHat"
    - ansible_distribution_major_version == "9"

- name: "deployer-setup-dhcp : package installation (FEDORA)"
  yum: name=dhcp-server state=installed
  when:
    - ansible_distribution == "Fedora"
    - ansible_distribution_major_version == "38"

- name: "deployer-setup-dhcp : package installation"
  yum: name=tftp-server,ipxe-bootimgs,syslinux,syslinux-tftpboot,yum-utils state=installed



- name: "deployer-setup-dhcp : create tftpboot directories"
  file:
    path: "{{ item }}"
    mode: "0755"
    state: directory
  with_items:
    - "/var/lib/tftpboot/bios"
    - "/var/lib/tftpboot/efi"



- name: "deployer-setup-dhcp : clean-up temp workspaces"
  shell:
    cmd: |
      if [[ -d "{{ xtoph_deploy.deployhost.dhcp.tmp_dir }}" ]] ; then rm -rf {{ xtoph_deploy.deployhost.dhcp.tmp_dir }} ; fi



- name: "deployer-setup-dhcp : create new temp workspaces"
  file:
    path="{{ item }}"
    mode="0755"
    state=directory
  loop:
    - "{{ xtoph_deploy.deployhost.dhcp.tmp_dir }}"
    - "{{ xtoph_deploy.deployhost.dhcp.tmp_dir }}/rpms"
    - "{{ xtoph_deploy.deployhost.dhcp.tmp_dir }}/efi"
  when: xtoph_deploy.deployhost.dhcp.enable == true



##
##    Setup for BIOS based deployments
##
##        For SuperMicro BIOS IPMI, I needed to 
##        add ldlinux.32 and libutil.c32 on RHEL 8
##



- name: "deployer-setup-dhcp : copy bios files to tftpboot/pxelinux"
  copy:
    src:   "{{ item }}"
    dest:  "/var/lib/tftpboot/bios"
    mode:  "0644"
    owner: root
    group: root
    remote_src: yes
  with_items:
    - "/usr/share/syslinux/pxelinux.0"
    - "/usr/share/syslinux/menu.c32"



- name: "deployer-setup-dhcp : copy extra bios files to support SuperMicro on RHEL8/RHEL9"
  copy:
    src:   "{{ item }}"
    dest:  "/var/lib/tftpboot/bios"
    mode:  "0644"
    owner: root
    group: root
    remote_src: yes
  with_items:
    - "/usr/share/syslinux/ldlinux.c32"
    - "/usr/share/syslinux/libutil.c32"
  when:
    - ansible_distribution == "RedHat"
    - ansible_distribution_major_version == "8" or ansible_distribution_major_version == "9"



##
##    Setup for UEFI based deployments
##
##        NOTE: could not use ansible yum module
##              becuase it skips the download if
##              the rpm is already installed.  Used
##              shell built-in with yumdownloader
##



- name: "deployer-setup-dhcp : download rpms (do not install) for efi artifacts"
  shell:
    cmd: |
      cd {{ xtoph_deploy.deployhost.dhcp.tmp_dir }}/rpms;  yumdownloader {{ item }}
  with_items:
    - "shim-x64"
    - "grub2-efi-x64"



- name: "deployer-setup-dhcp : unpack contents of rpms for efi artifacts"
  shell:
    cmd: |
      cd {{ xtoph_deploy.deployhost.dhcp.tmp_dir }}/efi; rpm2cpio {{ xtoph_deploy.deployhost.dhcp.tmp_dir }}/rpms/{{ item }}*.rpm | cpio -dimv
  with_items:
    - "shim-x64"
    - "grub2-efi"



- name: "deployer-setup-dhcp : copy efi artifacts to tftpboot/efi (Red Hat)"
  copy:
    src:   "{{ item }}"
    dest:  "/var/lib/tftpboot/efi"
    mode:  "0644"
    owner: root
    group: root
    remote_src: yes
  with_items:
    - "{{ xtoph_deploy.deployhost.dhcp.tmp_dir }}/efi/boot/efi/EFI/redhat/shimx64.efi"
    - "{{ xtoph_deploy.deployhost.dhcp.tmp_dir }}/efi/boot/efi/EFI/redhat/grubx64.efi"
  when:
    - ansible_distribution == "RedHat"



- name: "deployer-setup-dhcp : copy efi files to tftpboot (CentOS)"
  copy:
    src:   "{{ item }}"
    dest:  "/var/lib/tftpboot/efi"
    mode:  "0644"
    owner: root
    group: root
    remote_src: yes
  with_items:
    - "{{ xtoph_deploy.deployhost.dhcp.tmp_dir }}/efi/boot/efi/EFI/centos/shimx64.efi"
    - "{{ xtoph_deploy.deployhost.dhcp.tmp_dir }}/efi/boot/efi/EFI/centos/grubx64.efi"
  when:
    - ansible_distribution == "CentOS"



###
###    Clean up
###



- name: "common-dhcp-setup : clean-up temporary work-space"
  shell:
    cmd: |
      if [[ -d "{{ xtoph_deploy.deployhost.dhcp.tmp_dir }}" ]] ; then 
        rm -rf {{ xtoph_deploy.deployhost.dhcp.tmp_dir }} 
      fi
  when: xtoph_deploy.cleanup == true


## Authors: 
##   Christoph Doerbeck
##
## Summary:
##



##
##
##



- delegate_to: localhost
  block:

      ##
      ##    NOTE: All tasks here are blocked and delegated to execute
      ##          on the deployhost/localhost when deploy_node = true
      ##



      ##
      ##    Create MAC addresses if not already configured
      ##    and store it in the ../config/host_vars directory
      ##
 


      - name: "libvirt-deploy-preprocess: create host_vars dir"
        file: path="{{ lookup('env','PWD') }}/config/host_vars" state=directory
   
      - name: "libvirt-deploy-preprocess: create host_vars file"
        file: path="{{ lookup('env','PWD') }}/config/host_vars/{{ inventory_hostname }}" state=touch
    
      - name: "libvirt-deploy-preprocess: generate random MAC "
        script: macgen.py
        register: macgen_output
        when: h_pubMAC is undefined
    
      - name: "libvirt-deploy-preprocess: store random MAC in host_vars"
        lineinfile:
          dest:   "{{ lookup('env', 'PWD') }}/config/host_vars/{{ inventory_hostname }}"
          line:   "h_pubMAC: '{{ macgen_output.stdout }}'"
          state:  present
        when: h_pubMAC is undefined
        register: makeupmac
    
      - name: "libvirt-deploy-preprocess: set fact to preserve MAC for this run"
        set_fact:
          h_pubMAC: '{{ macgen_output.stdout }}'
        when: makeupmac.changed

      - name: "libvirt-deploy-preprocess: ensure dictionary is rebuilt with the new MAC (_xtoph_deploy_dict_processed = false)"
        set_fact:
          _xtoph_deploy_dict_processed: false
        when: makeupmac.changed



      ##
      ##    Determine state of the vm
      ##

      - name: "libvirt-deploy-preprocess : determine state of vm"
        delegate_to: "{{ xtoph_deploy.platform_profile.host_fqdn }}"
        shell:
          cmd: "virsh domstate '{{ xtoph_deploy.platform_profile.vm.name }}'"
        register: vminfo_result
        ignore_errors: true

      - name: "libvirt-deploy-preprocess : DEBUG vm status/info results"
        debug: var=vminfo_result
        when: xtoph_deploy.debug == true



      ##
      ##    If the node is absent OR node NOT up,
      ##    then set_fact to deploy the node
      ##

      - set_fact:
          deploy_node: false

      - set_fact:
          deploy_node: true
        when: vminfo_result.rc != 0

      - set_fact:
          deploy_node: true
        when: ( vminfo_result.rc == 0 and vminfo_result.stdout == "shut off" )

      - name:  "libvirt-deploy-preprocess : DEBUG vm status result"
        debug:
          var: vminfo_result
        when: xtoph_deploy.debug == true

      - name:  "libvirt-deploy-preprocess : DEBUG vm status/info results"
        debug:
          msg: "deploy_node = {{ deploy_node }}"
        when: xtoph_deploy.debug == true


#!/bin/bash

##
##    This script is intended to be used with
##    the xtoph_deploy ansible role.  It combines
##    all steps to REMOVE a libvirt network if
##    it can be determined that no VMs (active or
##    inactive) are configured to use it.
##
##    The intent is to provide one command for
##    an ansible shell-task which can be throttled.
##



NETWORK_NAME="{{ xtoph_deploy.machine_profile.network.default.network_name }}"
XMLLINT_XPATH="/domain/devices/interface[@type=\"network\"]/source[@network=\"${NETWORK_NAME}\"]"
PORT_COUNT=0

if virsh net-info ${NETWORK_NAME} &> /dev/null ; then

    ##
    ##    Not ideal, but other commands like net-port-list
    ##    only report active domains.  So for now just scan all
    ##    domains via dumpxml.
    ##

    for i in `virsh list --all --name` ; do

        if virsh dumpxml $i | xmllint --xpath ${XMLLINT_XPATH} - &> /dev/null ; then

            echo "libvirt network ${NETWORK_NAME} is still used by domain $i"

            (( ++PORT_COUNT ))

            break
        fi
    done


    ##
    ##    Destroy and Undefine the libvirt network only if count == 0
    ##

    if [[ ${PORT_COUNT} -eq 0 ]] ; then

        echo "libvirt network ${NETWORK_NAME} is unused"

        virsh net-destroy ${NETWORK_NAME}

        virsh net-undefine ${NETWORK_NAME}

        ##    Our ansible task is watching for the word "CHANGED"
 
        echo "libvirt network CHANGED : network ${NETWORK_NAME} undefined"

    fi

fi
